# wpkgsyncexclude.awk
# read the package.xml files, list the folder for each package
# read the log file, get a list of all the packages we tried to install
# delete the entries for the packages we want
# what's left is a list of folders to exclude

# call:
# awk -f wpkgsyncexclude.awk %wpkgFolder%\packages\*.xml %wpkglogfile% > "%temp%\%scriptname%.excl.txt"

# 03/07/20  dce  also don't exclude folders of packages in process of being removed
# 22/04/21  dce  add referenced packages properly
# 01/12/21  dce  tidy output

BEGIN {
	IGNORECASE = 1
	print "# ====================================================="
	print "# rsync folder exclude list autogenerated by wpkgsync"
	print "# standard excludes:"
    print "lost+found"
    print "client"
    print "profiles.sites"
	print "# ====================================================="
	print "# packages required:"
}

# for each package in the xml files, get the package_id
#      id='7zip' 
/[[:space:]]id[[:space:]]*=/ {
	package_id = $0
	gsub(/^.*id[[:space:]]*=/,"",package_id)
	gsub(/\"/,"",package_id)  # "
	gsub(/'/,"",package_id)
	gsub(/ /,"",package_id)
}

# this code gets invoked when we're installing stuff, and tells us where it is
# <install cmd='msiexec /qn /norestart /i %SOFTWARE%\putty\putty-%version%-installer.msi' />
# we assume that at run time %SOFTWARE% points to "packages/"
(/<install.*%software%/ || /<upgrade.*%software%/) && (!/\.\./) {
	package_folder = $0
	gsub(/.*%software%\\/,"",package_folder)
	gsub(/\\.*$/,"",package_folder)
	folder_path[package_id] = "packages/" package_folder "/"
}

# now read wpkg log to see what package_ids apply to this machine
# 2020-05-03 17:52:04, DEBUG   : Adding package with ID 'putty' to profile packages.
/Adding package with ID/ {
	# package_id is the bit in ''
	split ($0, stringparts, "'")
	package_id = stringparts[2]

	if (package_id in folder_path) {
		printf("# %-25s  : %s\n", package_id, folder_path[package_id])
		# and delete that element from the array
		delete folder_path[package_id]
	} else {
		printf("# %-25s\n", package_id)
	}
}

# and referenced packages
# 2021-04-22 08:06:11, DEBUG   : Adding referenced package 'ChassisType' (chassistype) for package 'WPKG Settings' (wpkg-settings)
/Adding referenced package/ {
	# package_id is the first bit in ()
	split ($0, stringparts, "(")
	package_id     = stringparts[2]
    sub(/).*$/,"",package_id)	# remove everything after the ")"

	if (package_id in folder_path) {
		printf("# %-25s r: %s\n", package_id, folder_path[package_id])
		# and delete that element from the array
		delete folder_path[package_id]
	} else {
		printf("# %-25s r:\n", package_id)
	}
}

# keep any package_ids which are currently marked for removal, as we may need folder contents
# 2020-05-13 19:05:28, DEBUG   : Package 'AVG Client 18' (avgclient18): Marked for removal.
/: Marked for removal/ {
	# package_id is the bit in ()
	package_id = $0
    gsub(/^.*\(/,"",package_id)	# remove everything up to the "("
	gsub(/\).*$/,"",package_id) # remove anything after "")"

	if (package_id in folder_path) {
		printf("# %-25s - %s [remove]\n", package_id, folder_path[package_id])
		# and delete that element from the array
		delete folder_path[package_id]
	} else {
		printf("# %-25s f\n", package_id)
	}
}

END {
	# we don't care about duplicates
	print "# ====================================================="
	print "# packages not required:"
	for (i in folder_path) {
		# print ifolder_path[i]
		printf("# %-25s\n", i)
	}
	print "# ====================================================="
	print "# hence folders to exclude:"
	for (i in folder_path) {
		print folder_path[i]
	}
	print "# ====================================================="
}